sudo: required
# We need the systemd for the kubeadm and it's default from 16.04+
dist: xenial
# This moves Kubernetes specific config files.

stages:
  - name: "Basic Tests"
  - name: "Extended Tests"
    if: branch = master
jobs:
  include:
    - stage: "Basic Tests"
      script:
        - cd tests && sudo bash ./NoCustomConfigBasicTest.sh && cd ..
    - stage: "Extended Tests"
      script: cd tests && sudo bash ./Ce23WithSampleDataMysqlSearchNoNfsTest.sh && cd ..
    - script: cd tests && sudo bash ./CeFromComposerNoNfsTest.sh && cd ..
    - script: cd tests && sudo bash ./EeLinkingTest.sh && cd ..

env:
    - CHANGE_MINIKUBE_NONE_USER=true

install:
  # Make root mounted as rshared to fix kube-dns issues.
  - sudo mount --make-rshared /
  # Download kubectl, which is a requirement for using minikube. Had to install kubeadm on local VM https://kubernetes.io/docs/setup/independent/install-kubeadm/
  - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.13.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  # Download Minikube.
  - curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.1.0/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  # Download Helm
  - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get > get_helm.sh && chmod +x get_helm.sh && sudo ./get_helm.sh
  # Socat is required fo proper Helm operation
  - sudo apt-get update && sudo apt-get install -y socat
  # TODO Install sudo apt install nfs-kernel-server
#  - sudo apt install -y nfs-kernel-server
  - cat ./etc/helm/magento-kubernetes-devbox/values.yaml

before_script:
  - sudo bash ./scripts/host/configure_ubuntu_travis.sh
  - cat ./tests/include/configuration.sh
  - cat ./scripts/host/k_rebuild_environment.sh
  - cat ./init_project.sh
  - cat ./etc/config.yaml.dist
#  - cat ./tests/_files/* # TODO: Cannot cat because of directory, move configs to a separate directory
  - cat ./scripts/host/get_path_to_php.sh
  - while sleep 540; do echo "=====[ $SECONDS seconds still running ]====="; done &

after_script:
  - ls
  - pwd
  - sudo kubectl describe pods
  - sudo kubectl describe deployments
  - sudo kubectl get pv,pvc
  - sudo kubectl logs -l app=magento -c monolith-xdebug
  - sudo kubectl logs -l app=magento -c monolith
  - sudo kubectl logs -l app=magento -c nginx
  - sudo cat ./logs/*
  - sudo cat ./tests/tmp/test/current-test.log
  - sudo cat ./tests/tmp/test/magento2-devbox/log/*
  - sudo cat /etc/exports
  - kill %1
