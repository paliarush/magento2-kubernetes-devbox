#!/usr/bin/env bash

devbox_dir="${DEVBOX_ROOT}"

source "${devbox_dir}/scripts/functions.sh"

get_config_value="${devbox_dir}/scripts/get_config_value.sh"
magento_host_name="$(bash ${get_config_value} "magento_host_name")"
use_nfs="$(bash "${devbox_dir}/scripts/get_config_value.sh" "guest_use_nfs")"
is_windows_host=${IS_WINDOWS_HOST}
generate_basic_data="$(bash ${get_config_value} "magento_generate_basic_data")"


magento_app_code_dir="${devbox_dir}/magento/app/code/Magento"
if [[ -d "${magento_app_code_dir}" ]]; then
    cd "${magento_app_code_dir}"
    status "Deleting TestModule directories"
    ls | grep "TestModule" | xargs rm -rf
fi
cd "${devbox_dir}"

declare -A setupOptions
setupOptions[admin_frontname]="$(bash ${get_config_value} "magento_admin_frontname")"
setupOptions[language]="$(bash ${get_config_value} "magento_language")"
setupOptions[timezone]="$(bash ${get_config_value} "magento_timezone")"
setupOptions[currency]="$(bash ${get_config_value} "magento_currency")"
setupOptions[admin_user]="$(bash ${get_config_value} "magento_admin_user")"
setupOptions[admin_password]="$(bash ${get_config_value} "magento_admin_password")"
setupOptions[db_host]='magento2-mysql'
setupOptions[db_name]='magento'
setupOptions[db_user]='root'
setupOptions[db_password]='123123q'
setupOptions[base_url]="http://${magento_host_name}/"
setupOptions[admin_lastname]='Admin'
setupOptions[admin_firstname]='Admin'
setupOptions[admin_email]='admin@example.com'
setupOptions[amqp_host]='magento2-rabbitmq'
setupOptions[amqp_port]='5672'
setupOptions[amqp_user]='admin'
setupOptions[amqp_password]='123123q'
setupOptions[amqp_virtualhost]='/'

#if [[ ${is_windows_host} == 1 ]] || [[ ${use_nfs} == 0 ]]; then
#    sudo chown -R devbox:devbox ${MAGENTO_ROOT}
#fi
#
#status "Killing MQ processes"
#pkill -f queue

status "Installing/re-installing Magento"
incrementNestingLevel

cd ${MAGENTO_ROOT}

status "Removing Magento configuration files (env.php and config.php)"
rm -f "${MAGENTO_ROOT}/app/etc/config.php"
rm -f "${MAGENTO_ROOT}/app/etc/env.php"

status "Restoring stored in git config.php (if applicable)"
git checkout "${MAGENTO_ROOT}/app/etc/config.php" &>/dev/null

bash "${DEVBOX_ROOT}/scripts/guest/m-clear-cache"
# Cache cleaning takes 5-10 seconds and should be avoided until the end of installation to speed up the process
export SKIP_CACHE_CLEAN=1

db_names=("${setupOptions[db_name]}" "magento_integration_tests" )
for db_name in "${db_names[@]}"; do
    status "Dropping and creating '${db_name}' DB"
    mysql -u"${setupOptions[db_user]}" -p"${setupOptions[db_password]}" -h"${setupOptions[db_host]}" -e"drop database if exists ${db_name}; create database ${db_name};"
done

# Install Magento application
cd ${MAGENTO_ROOT}

install_cmd="./bin/magento setup:install \
    --db-host=${setupOptions[db_host]} \
    --db-name=${setupOptions[db_name]} \
    --db-user=${setupOptions[db_user]} \
    --db-password=${setupOptions[db_password]} \
    --backend-frontname=${setupOptions[admin_frontname]} \
    --base-url=${setupOptions[base_url]} \
    --language=${setupOptions[language]} \
    --timezone=${setupOptions[timezone]} \
    --currency=${setupOptions[currency]} \
    --admin-lastname=${setupOptions[admin_lastname]} \
    --admin-firstname=${setupOptions[admin_firstname]} \
    --admin-email=${setupOptions[admin_email]} \
    --admin-user=${setupOptions[admin_user]} \
    --admin-password=${setupOptions[admin_password]} \
    --cleanup-database \
    --use-rewrites=1"

# Configure Rabbit MQ
#if [[ -d "${MAGENTO_ROOT}/app/code/Magento/MessageQueue" ]] || [[ -d "${MAGENTO_ROOT}/vendor/magento/module-message-queue" ]]; then
#    install_cmd="${install_cmd} \
#    --amqp-host=${setupOptions[amqp_host]} \
#    --amqp-port=${setupOptions[amqp_port]} \
#    --amqp-user=${setupOptions[amqp_user]} \
#    --amqp-virtualhost=${setupOptions[amqp_virtualhost]} \
#    --amqp-ssl=false \
#    --amqp-ssl-options=[] \
#    --amqp-password=${setupOptions[amqp_password]}"
#fi

# TODO: Permission denied
#sudo chmod +x bin/magento
status "${install_cmd}"
#php ${install_cmd} 2> >(logError) > >(log)
php ${install_cmd}

cd "${MAGENTO_ROOT}/../magento-admin-ui"
php "./bin/magento setup:upgrade"

# Comment out the line above and uncomment the one below to debug Magento Setup script
# php -d xdebug.remote_autostart=1 ${install_cmd} 2> >(logError) > >(log)

status "Configuring Redis for session and as cache backend"
php "${MAGENTO_ROOT}/bin/magento" setup:config:set --page-cache=redis --page-cache-redis-server=magento2-redis-master
php "${MAGENTO_ROOT}/bin/magento" setup:config:set --cache-backend=redis --cache-backend-redis-server=magento2-redis-master
php "${MAGENTO_ROOT}/bin/magento" setup:config:set --session-save=redis --session-save-redis-host=magento2-redis-master

if [[ $? != 0 ]]; then
    error "Magento installation failed."
    exit 1
fi

bash "${devbox_dir}/scripts/guest/configure_varnish" -f

# TODO: Remove
#if [[ ${is_windows_host} == 1 ]] || [[ ${use_nfs} == 0 ]]; then
#    status "Changing ownership of "${MAGENTO_ROOT}" to devbox:devbox"
#    sudo chown -R devbox:devbox ${MAGENTO_ROOT}tests/include/helpers.sh
#fi

bash "${DEVBOX_ROOT}/scripts/guest/configure_search_engine"
bash "${DEVBOX_ROOT}/scripts/guest/change_magento_config_for_functional_tests"
bash "${DEVBOX_ROOT}/scripts/guest/update_magento_config" 'admin/security/session_lifetime' '86400'

export SKIP_CACHE_CLEAN=0
bash "${DEVBOX_ROOT}/scripts/guest/m-clear-cache"

if [[ ${generate_basic_data} != 0 ]]; then
    bash "${DEVBOX_ROOT}/scripts/guest/generate_basic_data"
fi

status "Checking if Magento frontend is accessible at '${setupOptions[base_url]}'"
magento_home_page_content="$(curl -sL ${setupOptions[base_url]}${setupOptions[admin_frontname]})"
pattern="All rights reserved."
if [[ ${magento_home_page_content} =~ ${pattern} ]]; then

    bash "${DEVBOX_ROOT}/scripts/guest/warm_up_cache"

    status "Generating XSD references for PHP Storm in the background"
    php "${MAGENTO_ROOT}/bin/magento" dev:urn-catalog:generate "${devbox_dir}/.idea/misc.xml" && sed -i "s|${MAGENTO_ROOT}|${MAGENTO_ROOT_HOST}|g" "${devbox_dir}/.idea/misc.xml" &

    decrementNestingLevel
    success "Magento reinstalled successfully"
    info "$(regular)Magento application was deployed to $(bold)${MAGENTO_ROOT}$(regular) and installed successfully

    Access storefront at $(bold)${setupOptions[base_url]}$(regular)
    Access admin panel at $(bold)${setupOptions[base_url]}${setupOptions[admin_frontname]}/$(regular)"
else
    error "Magento frontend is not accessible at '${setupOptions[base_url]}' after installation. Please scan output above and logs for errors"
    exit 1
fi
